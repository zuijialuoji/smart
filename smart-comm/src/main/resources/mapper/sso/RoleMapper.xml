<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smart.dao.sso.RoleDao">

	<select id="get" resultType="com.smart.domain.sys.Role">
		select
		`id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified`
		from role where id = #{value}
	</select>

	<select id="condition" resultType="com.smart.domain.sys.Role">
		select
		`id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified`
		from role
		<where>
			<if test="roleId != null and roleId != ''"> and id = #{roleId} </if>
			<if test="roleName != null and roleName != ''"> and role_name = #{roleName} </if>
			<if test="roleSign != null and roleSign != ''"> and role_sign = #{roleSign} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
			<if test="userIdCreate != null and userIdCreate != ''"> and user_id_create = #{userIdCreate} </if>
			<if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
			<if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
	</select>


	<insert id="insert" parameterType="com.smart.domain.sys.Role"
		useGeneratedKeys="true" keyProperty="id">
		insert into role
		(

		`role_name`,
		`role_sign`,
		`remark`,
		`user_id_create`,
		`gmt_create`,
		`gmt_modified`
		)
		values
		(
		#{roleName},
		#{roleSign},
		#{remark},
		#{userIdCreate},
		#{gmtCreate},
		#{gmtModified}
		)
	</insert>

	<update id="update" parameterType="com.smart.domain.sys.Role">
		update role
		<set>
			<if test="roleName != null">`role_name` = #{roleName}, </if>
			<if test="roleSign != null">`role_sign` = #{roleSign}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="userIdCreate != null">`user_id_create` = #{userIdCreate}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}</if>
		</set>
		where id = #{roleId}
	</update>

	<delete id="remove">
		delete from role where role_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from role where id in
		<foreach item="roleId" collection="array" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</delete>

</mapper>